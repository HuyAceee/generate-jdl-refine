{
  "files": {
    "create.tsx": "import { Create } from '@refinedev/antd';\nimport { Form } from 'antd';\n\nimport DatePickerComponent from '~/components/common/DatePickerComponent';\nimport InputComponent from '~/components/common/InputComponent';\nimport InputNumberComponent from '~/components/common/InputNumberComponent';\nimport { InputTagComponent } from '~/components/common/InputTagComponent';\nimport SelectComponent from '~/components/common/SelectComponent';\nimport { TextAreaComponent } from '~/components/common/TextAreaComponent';\nimport { TextEditorComponent } from '~/components/common/TextEditorComponent';\nimport { useRefineForm } from '~/hooks/useRefineForm';\nimport { StatusEnum } from '~/models/common/enum';\nimport { sampleSchema } from '~/models/pages/sample';\nimport { enumToOptions } from '~/ultils/common';\n\nexport const SampleCreate = () => {\n  const { control, formProps, saveButtonProps } = useRefineForm(sampleSchema, {\n    title: '',\n    content: '',\n    description: '',\n    new: { id: '' },\n    status: StatusEnum.DRAFT,\n  });\n\n  return (\n    <Create saveButtonProps={saveButtonProps}>\n      <Form {...formProps} layout=\"vertical\">\n        <InputComponent control={control} name=\"title\" required />\n        <TextEditorComponent control={control} name=\"content\" required />\n        <TextAreaComponent control={control} name=\"description\" required />\n        <SelectComponent control={control} resource=\"news\" name=\"new.id\" label=\"new\" required labelField=\"title\" />\n        <SelectComponent control={control} options={enumToOptions(StatusEnum)} name=\"status\" required />\n        <InputComponent control={control} name=\"email\" />\n        <InputNumberComponent control={control} name=\"price\" />\n        <DatePickerComponent control={control} name=\"dealine\" label=\"Dealine\" />\n        <InputTagComponent control={control} name=\"tags\" />\n      </Form>\n    </Create>\n  );\n};\n",
    "edit.tsx": "import { Edit } from '@refinedev/antd';\nimport { useOne } from '@refinedev/core';\nimport { Form } from 'antd';\n\nimport DatePickerComponent from '~/components/common/DatePickerComponent';\nimport InputComponent from '~/components/common/InputComponent';\nimport InputNumberComponent from '~/components/common/InputNumberComponent';\nimport { InputTagComponent } from '~/components/common/InputTagComponent';\nimport SelectComponent from '~/components/common/SelectComponent';\nimport { TextAreaComponent } from '~/components/common/TextAreaComponent';\nimport { TextEditorComponent } from '~/components/common/TextEditorComponent';\nimport { useRefineForm } from '~/hooks/useRefineForm';\nimport { StatusEnum } from '~/models/common/enum';\nimport { SampleModel, sampleSchema } from '~/models/pages/sample';\nimport { enumToOptions } from '~/ultils/common';\n\nexport const SampleEdit = () => {\n  const { data, isLoading } = useOne<SampleModel>({ resource: 'sample' });\n  const { control, formProps, saveButtonProps } = useRefineForm(sampleSchema, data?.data);\n\n  return (\n    <Edit saveButtonProps={saveButtonProps} isLoading={isLoading}>\n      <Form {...formProps} layout=\"vertical\">\n        <InputComponent control={control} name=\"title\" />\n        <TextEditorComponent control={control} name=\"content\" />\n        <TextAreaComponent control={control} name=\"description\" />\n        <SelectComponent control={control} resource=\"news\" name=\"new.id\" label=\"new\" />\n        <SelectComponent control={control} options={enumToOptions(StatusEnum)} name=\"status\" />\n        <InputComponent control={control} name=\"email\" />\n        <InputNumberComponent control={control} name=\"price\" />\n        <DatePickerComponent control={control} name=\"dealine\" />\n        <InputTagComponent control={control} name=\"tags\" />\n      </Form>\n    </Edit>\n  );\n};\n",
    "list.tsx": "import { List } from '@refinedev/antd';\n\nimport TableComponent from '~/components/common/TableComponent';\nimport { ColumnConfig } from '~/models/common';\nimport { NewModel } from '~/models/pages/news';\n\nconst columnConfigs: ColumnConfig[] = [\n  {\n    key: 'id',\n    title: 'ID',\n  },\n  {\n    key: 'title',\n    title: 'Title',\n  },\n  {\n    key: 'content',\n    title: 'Content',\n  },\n  {\n    key: 'description',\n    title: 'Description',\n  },\n  {\n    key: 'new',\n    title: 'New',\n    render: (record: NewModel) => {\n      return record.name;\n    },\n  },\n  {\n    key: 'status',\n    title: 'Status',\n  },\n];\n\nexport const SampleList = () => {\n  return (\n    <List>\n      <TableComponent columnConfig={columnConfigs} role=\"admin\" />\n    </List>\n  );\n};\n",
    "show.tsx": "import { DateField, MarkdownField, Show, TextField } from '@refinedev/antd';\nimport { useOne } from '@refinedev/core';\nimport { Typography } from 'antd';\n\nimport { SampleModel } from '~/models/pages/sample';\n\nconst { Title } = Typography;\n\nexport const SampleShow = () => {\n  const { data, isLoading } = useOne<SampleModel>({ resource: 'sample' });\n  return (\n    <Show isLoading={isLoading}>\n      <Title level={5}>{'ID'}</Title>\n      <TextField value={data?.data?.id} />\n      <Title level={5}>{'Title'}</Title>\n      <TextField value={data?.data?.title} />\n      <Title level={5}>{'Content'}</Title>\n      <MarkdownField value={data?.data?.content} />\n      <Title level={5}>{'Description'}</Title>\n      <MarkdownField value={data?.data?.description} />\n      <Title level={5}>{'New'}</Title>\n      <TextField value={data?.data?.new?.name} />\n      <Title level={5}>{'Status'}</Title>\n      <TextField value={data?.data?.status} />\n      <Title level={5}>{'CreatedAt'}</Title>\n      <DateField value={data?.data?.createdAt} />\n    </Show>\n  );\n};\n",
    "index.ts": "export * from './create';\nexport * from './edit';\nexport * from './list';\nexport * from './show';\n"
  }
}
